(defmacro! defun 
  (fn* (name bindings & body)
      `(def! ~name (fn* ~bindings 
          (do ~@body)))))

(defmacro! comment 
  (fn* (& args)
    nil))

(defun load-file (path)
  (eval (read-string (str "(do " (slurp path) " nil)"))))

;; Javascrip interop
(def! + #js{
 return ~@.reduce((a, b) => a + b, 0);
})

(def! - #js{
 return ~@.slice(1).reduce((a, b) => a + b, ~@[0]);
})

(def! println #js{
  console.log(...~@);
  return null;
})